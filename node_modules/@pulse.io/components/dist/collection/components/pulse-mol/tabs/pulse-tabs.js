import { h } from '@stencil/core';
export class PulseTabs {
    constructor() {
        this.inputId = `pulse-tabs-${tabsIds++}`;
        this.labelId = `${this.inputId}-lbl`;
        this.tabs = [];
        this.allowEmptySelection = false;
    }
    valueChanged(value) {
        this.updateCards();
        this.tabChange.emit({ value });
    }
    onSelectTabDidLoad(ev) {
        const tab = ev.target;
        this.tabs.push(tab);
        if (this.value == null && tab.selected) {
            this.value = tab.value;
        }
        else {
            this.updateCards();
        }
    }
    onTabDidUnload(ev) {
        const index = this.tabs.indexOf(ev.target);
        if (index > -1) {
            this.tabs.splice(index, 1);
        }
    }
    onTabSelect(ev) {
        const selectedTab = ev.target;
        if (selectedTab) {
            selectedTab.selected = true;
            this.value = selectedTab.value;
        }
    }
    onTabDeselect(ev) {
        if (this.allowEmptySelection) {
            const selectedTab = ev.target;
            if (selectedTab) {
                selectedTab.selected = false;
                this.value = undefined;
            }
        }
    }
    handleResize() {
    }
    componentDidLoad() {
    }
    updateCards() {
        const value = this.value;
        let hasSelected = false;
        this.tabs.forEach((e) => {
            if (!hasSelected && e.value === value) {
                hasSelected = true;
                e.selected = true;
            }
            else {
                e.selected = false;
            }
        });
    }
    hostData() {
        return {
            'aria-labelledby': this.labelId,
            class: {
                'tab-group': true
            }
        };
    }
    render() {
        return (h("div", { class: "tabs-wrapper pulse-padding-s-xs-v" },
            h("slot", null)));
    }
    static get is() { return "pulse-tabs"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() { return {
        "$": ["pulse-tabs.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["pulse-tabs.css"]
    }; }
    static get properties() { return {
        "allowEmptySelection": {
            "type": "boolean",
            "mutable": false,
            "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "allow-empty-selection",
            "reflect": false,
            "defaultValue": "false"
        },
        "value": {
            "type": "any",
            "mutable": true,
            "complexType": {
                "original": "any | null",
                "resolved": "any",
                "references": {}
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "value",
            "reflect": false
        }
    }; }
    static get events() { return [{
            "method": "tabChange",
            "name": "tabChange",
            "bubbles": true,
            "cancelable": true,
            "composed": true,
            "docs": {
                "tags": [],
                "text": ""
            },
            "complexType": {
                "original": "any",
                "resolved": "any",
                "references": {}
            }
        }]; }
    static get watchers() { return [{
            "propName": "value",
            "methodName": "valueChanged"
        }]; }
    static get listeners() { return [{
            "name": "tabDidLoad",
            "method": "onSelectTabDidLoad",
            "target": undefined,
            "capture": false,
            "passive": false
        }, {
            "name": "tabDidUnload",
            "method": "onTabDidUnload",
            "target": undefined,
            "capture": false,
            "passive": false
        }, {
            "name": "tabSelect",
            "method": "onTabSelect",
            "target": undefined,
            "capture": false,
            "passive": false
        }, {
            "name": "tabDeselect",
            "method": "onTabDeselect",
            "target": undefined,
            "capture": false,
            "passive": false
        }, {
            "name": "resize",
            "method": "handleResize",
            "target": "window",
            "capture": false,
            "passive": true
        }]; }
}
let tabsIds = 0;
