import { getAppRoot } from '../../../utils/overlays/overlays';
export class ToolTipController {
    async present(properties) {
        const doc = document;
        let element = doc.createElement('pulse-tooltip');
        Object.assign(element, properties);
        return new Promise((resolve) => {
            setTimeout(() => {
                getAppRoot(doc).appendChild(element);
                return resolve(properties.id);
            }, 50);
        });
    }
    async dismiss(id) {
        const el = document.getElementById(id);
        el.dismiss();
        return;
    }
    static get is() { return "pulse-tooltip-controller"; }
    static get methods() { return {
        "present": {
            "complexType": {
                "signature": "<T>(properties: any) => Promise<T>",
                "parameters": [{
                        "tags": [],
                        "text": ""
                    }],
                "references": {
                    "Promise": {
                        "location": "global"
                    },
                    "T": {
                        "location": "global"
                    }
                },
                "return": "Promise<T>"
            },
            "docs": {
                "text": "",
                "tags": []
            }
        },
        "dismiss": {
            "complexType": {
                "signature": "<T>(id: any) => Promise<T>",
                "parameters": [{
                        "tags": [],
                        "text": ""
                    }],
                "references": {
                    "Promise": {
                        "location": "global"
                    },
                    "T": {
                        "location": "global"
                    }
                },
                "return": "Promise<T>"
            },
            "docs": {
                "text": "",
                "tags": []
            }
        }
    }; }
}
