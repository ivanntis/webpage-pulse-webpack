import { h } from '@stencil/core';
import { createColorClasses } from '../../../utils/themes';
export class PulseRadio {
    constructor() {
        this.inputId = `pulse-rb-${radioButtonIds++}`;
        this.disabled = false;
        this.name = this.inputId;
        this.checked = false;
        this.color = "success";
        this.onClick = () => {
            if (this.checked) {
                this.radioDeselect.emit();
            }
            else {
                this.checked = true;
            }
        };
    }
    componentWillLoad() {
        if (this.value === undefined) {
            this.value = this.inputId;
        }
    }
    hostData() {
        const { color } = this;
        return {
            class: Object.assign({}, createColorClasses(color), { [`radio-disabled`]: this.disabled && !this.checked, [`radio-disabled-checked`]: this.disabled && this.checked })
        };
    }
    checkedChanged(isChecked) {
        if (isChecked) {
            this.radioSelect.emit({
                checked: true,
                value: this.value
            });
        }
    }
    componentDidLoad() {
        this.radioDidLoad.emit();
    }
    componentDidUnload() {
        this.radioDidUnload.emit();
    }
    render() {
        return (h("div", { class: "radio" },
            h("input", { id: "radio__input", class: "radio__input", type: "radio", checked: this.checked, name: this.name, value: this.value, disabled: this.disabled, onClick: this.onClick }),
            h("label", { htmlFor: "radio__input", class: "radio__label" }, this.label)));
    }
    static get is() { return "pulse-radio"; }
    static get encapsulation() { return "shadow"; }
    static get originalStyleUrls() { return {
        "$": ["pulse-radio.scss"]
    }; }
    static get styleUrls() { return {
        "$": ["pulse-radio.css"]
    }; }
    static get properties() { return {
        "disabled": {
            "type": "boolean",
            "mutable": false,
            "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "disabled",
            "reflect": false,
            "defaultValue": "false"
        },
        "label": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "label",
            "reflect": false
        },
        "name": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "string",
                "resolved": "string",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "name",
            "reflect": false,
            "defaultValue": "this.inputId"
        },
        "value": {
            "type": "any",
            "mutable": true,
            "complexType": {
                "original": "any | null",
                "resolved": "any",
                "references": {}
            },
            "required": false,
            "optional": true,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "value",
            "reflect": false
        },
        "checked": {
            "type": "boolean",
            "mutable": false,
            "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "checked",
            "reflect": false,
            "defaultValue": "false"
        },
        "color": {
            "type": "string",
            "mutable": false,
            "complexType": {
                "original": "Color",
                "resolved": "\"error\" | \"pgray\" | \"primary\" | \"success\" | \"warn\"",
                "references": {
                    "Color": {
                        "location": "import",
                        "path": "../../../interface"
                    }
                }
            },
            "required": false,
            "optional": false,
            "docs": {
                "tags": [],
                "text": ""
            },
            "attribute": "color",
            "reflect": false,
            "defaultValue": "\"success\""
        }
    }; }
    static get events() { return [{
            "method": "valueEmmit",
            "name": "valueEmmit",
            "bubbles": true,
            "cancelable": true,
            "composed": true,
            "docs": {
                "tags": [],
                "text": ""
            },
            "complexType": {
                "original": "boolean",
                "resolved": "boolean",
                "references": {}
            }
        }, {
            "method": "radioSelect",
            "name": "radioSelect",
            "bubbles": true,
            "cancelable": true,
            "composed": true,
            "docs": {
                "tags": [],
                "text": "Emitted when the radio button is selected."
            },
            "complexType": {
                "original": "any",
                "resolved": "any",
                "references": {}
            }
        }, {
            "method": "radioDeselect",
            "name": "radioDeselect",
            "bubbles": true,
            "cancelable": true,
            "composed": true,
            "docs": {
                "tags": [{
                        "text": undefined,
                        "name": "internal"
                    }],
                "text": "Emitted when checked radio button is selected."
            },
            "complexType": {
                "original": "any",
                "resolved": "any",
                "references": {}
            }
        }, {
            "method": "radioDidLoad",
            "name": "radioDidLoad",
            "bubbles": true,
            "cancelable": true,
            "composed": true,
            "docs": {
                "tags": [{
                        "text": undefined,
                        "name": "internal"
                    }],
                "text": "Emitted when the radio loads."
            },
            "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
            }
        }, {
            "method": "radioDidUnload",
            "name": "radioDidUnload",
            "bubbles": true,
            "cancelable": true,
            "composed": true,
            "docs": {
                "tags": [{
                        "text": undefined,
                        "name": "internal"
                    }],
                "text": "Emitted when the radio unloads."
            },
            "complexType": {
                "original": "void",
                "resolved": "void",
                "references": {}
            }
        }]; }
    static get watchers() { return [{
            "propName": "checked",
            "methodName": "checkedChanged"
        }]; }
}
let radioButtonIds = 0;
